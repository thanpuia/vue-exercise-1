{"remainingRequest":"/Users/lalthanpuiachhangte/Projects/vue-exercise-1/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/lalthanpuiachhangte/Projects/vue-exercise-1/src/components/HelloWorld.vue?vue&type=style&index=0&id=469af010&lang=css","dependencies":[{"path":"/Users/lalthanpuiachhangte/Projects/vue-exercise-1/src/components/HelloWorld.vue","mtime":1635329753754},{"path":"/Users/lalthanpuiachhangte/Projects/vue-exercise-1/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lalthanpuiachhangte/Projects/vue-exercise-1/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1632349277000},{"path":"/Users/lalthanpuiachhangte/Projects/vue-exercise-1/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lalthanpuiachhangte/Projects/vue-exercise-1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lalthanpuiachhangte/Projects/vue-exercise-1/node_modules/vue-loader-v16/dist/index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgLmVycm9yewogICAgY29sb3I6IHJlZDsKICAgIGJvcmRlcjogcmVkIDNweCBzb2xpZDsKICB9Cg=="},{"version":3,"sources":["/Users/lalthanpuiachhangte/Projects/vue-exercise-1/src/components/HelloWorld.vue"],"names":[],"mappings":";EAwSE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB","file":"/Users/lalthanpuiachhangte/Projects/vue-exercise-1/src/components/HelloWorld.vue","sourceRoot":"","sourcesContent":["<template>\n\n  <!-- EXAMPLE  -->\n  <div>\n    Hello there, the angle from my nightmare!<br>\n    {{ text.toUpperCase() }} <br>\n  \n  \n       <h1>EXAMPLE 1</h1>\n    <div v-bind:name=\"myBind\">Dynamic Binding</div>\n\n\n   <h1>EXAMPLE 2</h1>\n    <span v-if=\"yes\">\n      Yes\n    </span>\n\n    <span v-else>\n      No\n    </span>\n \n   <h1>EXAMPLE 3</h1>\n    <div>\n      <ul>\n        <li :key=\"color.id\" v-for=\"(color, fff) in colors\">\n          Sl.{{ fff+1 }}  ||  {{ color.price }}\n          </li>\n      </ul>\n    </div>\n\n  \n   <h1>EXAMPLE 4 WATCHER</h1>\n    <div>\n      <label>Search: <input type=\"text\" v-model=\"searchText\"/></label>\n      <h5>Results: {{results.count}}</h5>\n      <ul>\n        <li :key=\"result\" v-for=\"result in results.results\">\n          {{ result.name }}\n        </li>\n      </ul>\n\n    </div>\n\n     \n     <h1>EXAMPLE 5 EVENTS</h1>\n    <div>\n      <h1 v-on:click=\"show = !show\">\n        Toggle Baby\n      </h1>\n      <p v-show=\"show\">\n        Hide and show this msg by Toggle Baby\n      </p>\n    </div>\n\n      \n     <h1>EXAMPLE 6 METHODS</h1>\n    <div>\n      <button type=\"button\" v-on:click=\"myToggle\">\n        My Toggle Baby\n      </button>\n      <p v-show=\"show2\">\n        Hide and show this msg by My Toggle Baby\n      </p>\n    </div>\n    \n    <h1>EXAMPLE 7 EVENT PROPAGATIONS SETUP</h1>\n    <div>\n      \n         \n      <div v-on:click=\"messages.push('Milk')\">Milk</div>\n      <div v-on:click=\"messages.push('Sugar')\">Sugar</div>\n\n        <p> Last clicked:\n           <ol>\n            <li v-for=\"message in messages\" v-bind:key=\"message\">\n              {{ message }}\n            </li>\n          </ol>\n        </p>\n        <input type=\"button\" v-on:click=\"messages = []\" value=\"Clear\" />\n      </div>\n      <div>\n      <h1>EXAMPLE 8 BINDING (v-bind)</h1>\n        <input type=\"text\" v-model=\"inputs.text\"/>\n        <p>\n          <strong>Text: </strong> {{ inputs.text }}\n        </p>\n    \n        <input type=\"text\" v-model.number=\"inputs.numberAsNumber\">\n        <p>\n          <strong>Text: </strong>{{ inputs.numberAsNumber }}\n        </p>\n\n        <input type=\"radio\" v-model=\"inputs.radios\" value=\"Mango\" id=\"mango\">\n        <label for=\"mango\">Mangoo</label>\n        <input type=\"radio\" v-model=\"inputs.radios\" value=\"Apple\" id=\"apple\">\n        <label for=\"apple\">Apples</label>\n\n        <p> {{inputs.radios}}</p>\n\n        <h4>Select</h4>\n        <select  v-model=\"inputs.multipleselect\" multiple>\n          <option value=\"green\">Green</option>\n          <option value=\"blue\">Blue</option>\n          <option value=\"red\">Red</option>\n        </select>\n        <p><strong>Multi Select: </strong>{{inputs.multipleselect}}</p>\n      </div>\n      <div>\n      \n        \n          <h1>EXAMPLE 9 MODIFIER LAZY</h1>\n          <h5>Using the .lazy modifier to change the model after the input loses focus and fires a change event</h5>\n          <input type=\"text\" v-model.lazy=\"lazy\"/>\n          <p>\n            <strong>Lazy: </strong> {{ lazy }}\n          </p>\n\n          <input type=\"text\" v-model.trim=\"trim\"/>\n          <p>\n            <strong>My trim space</strong> {{ trim }}\n          </p>\n        </div>\n       \n\n       <div>\n         <h1>EXAMPLE 10 BINDING CSS STYLE WTIH INLINE OBJECT</h1>\n         <input type=\"text\" v-model=\"fontSize\">\n         <p v-bind:style=\"{fontSize: fontSize +'px'}\">\n           My Dynamic fontsize using inline object\n         </p>\n\n         <input type=\"text\" v-model=\"myFontSize\">\n\n         <p v-bind:style=\"[fontSizeObject,fontColorObject]\">\n            My Very Vue vue\n\n         </p>\n       </div>\n\n       <div>\n        <h1>EXAMPLE 11 DYNAMIC CLASS</h1>\n        <input type=\"text\" v-model=\"myErrorTestingInput\" v-bind:class=\"{ error: inputError}\">\n \n\n       </div>\n      \n        <div>\n        <h1>EXAMPLE 12 STATE MANAGEMENT</h1>\n          <p>Basic data sharing</p>\n            <h1>App 1 shared value: {{shared.value}}</h1> \n            <h1>App 2 Shared Value: {{shared.value}}</h1>\n            <button v-on:click=\"increase\">+</button>\n            <button v-on:click=\"decrease\">-</button>\n            <p>\n              STATE MANAGEMENT KA THIAM LO EXPECIALLY VEUX\n            </p>\n\n       </div>\n        <h1>EXAMPLE 13 USING COMPONENT</h1>\n        HEI PAWH KA THIAM LO PROPS ,EVENTS KA THIAM LOH HO.\n          In this chapter, we learned all about components, including creating them, defining the data as a function, defining and passing props, emitting and handling events, using slots, and understanding the difference between global and local registration.\n    \n  </div>\n\n\n</template>\n\n<script>\nimport axios from \"axios\";\n//CHAPTER 7\nvar sharedData = {\n  devMode: true,\n  state: {\n    value:1\n  },\n};\n\nexport default {\nstate:{\n  ship:{},\n  ships:{count:0, results:[]},\n  pilots:[],\n\n},\n\ndata(){\n  return{\n    text:'tis is all smalls',\n    myBind:'this binding thingy',\n\n    yes: false,\n    no: false,\n    maybe:0,\n    colors:[\n      { title: 'Boring Facts', price: 6.99, id: 2, genres: ['adult', 'non-fiction'] }, \n      { title: 'Overly Complex Story', price: 7.99, id: 3, genres: ['adult', 'science fiction', 'fiction'] },\n    ],\n    searchText: \"\",\n    results:[],\n    history:{},\n    show: true,\n    show2:true,\n    messages:[],\n    inputs:{\n      text:\"\",\n      numberAsString:0,\n      numberAsNumber:0,\n      radios:'go!',\n      multipleselect:[],\n    },\n    lazy:\"\",\n    trim:\"\",\n    fontSize:12,  \n    myFontSize:12,\n    fontSizeObject:{\n      fontSize:32+'px',\n    },\n    fontColorObject:{\n      color:'blue'\n    },\n    myErrorTestingInput: \"\",\n    myErrorTestingInput2: \"\",\n\n    inputError:null,\n\n    //CHAPTER 7\n    shared: sharedData,\n    private:{},\n\n\n  }\n},\n\n methods:{\n   myToggle(){\n     this.show2 = !this.show2;\n   },\n\n   search:function(){\n     axios\n      .get(`https://swapi.dev/api/starships/?search=${this.searchText}`)\n      .then(response => {\n        this.results = response.data;\n\n      })\n        .catch(error => {\n        console.log(error);\n      \n      })\n   },\n\n   increase() {\n     this.$data.shared.value++;\n   },\n\n   decrease(){\n     //this.$data.shared.value--;\n    sharedData.value--;\n   },\n\n  //A HNUAI FUNCTION HI KA HRE THIAM LO\n  //STATE MANAGEMENT VUEX\n   onlyStarFighters(state) {\n     return state.ships.results.filter(function(ship){\n       return ship.starship_class === 'Starfighter';\n     });\n   },\n\n },\n watch:{\n   //SEARCH TEXT DYNAMCIALLY\n   /*\n    Search text is an input text with v-model=\"searchText\" as soon as some activity happens, the watch will activate and it will goto the model name\n    seachText and it call the function 'search'\n   */\n   myFontSize : function(){\n     this.fontSizeObject.fontSize = this.myFontSize + 'px';\n   },\n   searchText: function(){\n     this.search();\n   },\n    myErrorTestingInput: function() {\n      var results = parseInt(this.myErrorTestingInput);\n      if(isNaN(results)){\n        this.inputError = true;\n      }else\n        this.inputError = false;\n    }\n },\n \n\n}\n</script>\n\n<style>\n  .error{\n    color: red;\n    border: red 3px solid;\n  }\n</style>"]}]}